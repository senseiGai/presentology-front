"use client";

import React, { useEffect } from "react";
import { InputField } from "@/shared/ui/InputField";
import { Button } from "@/shared/ui/Button";
import Image from "next/image";
import LogoIcon from "../../../../public/icons/Logo";
import Link from "next/link";
import { passwordRules } from "../lib/passwordRules";
import { useRegisterStore } from "../model/use-registration-store";

import { useRouter } from "next/navigation";

export const RegistrationBlock = () => {
  const router = useRouter();
  const {
    email,
    password,
    confirmPassword,
    isLoading,

    emailError,
    confirmPasswordError,

    setConfirmPasswordTouched,
    setEmailTouched,

    emailTouched,
    confirmPasswordTouched,

    passwordStatus,
    setEmail,
    setPassword,
    setConfirmPassword,

    validateAndSubmit,
    reset,
  } = useRegisterStore();

  useEffect(() => {
    return () => reset();
  }, [reset]);

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    validateAndSubmit();
    if (!isLoading) {
      router.push("/survey");
    }
  };

  return (
    <section className="pt-[24px] pl-[40px] flex flex-row justify-between">
      <div className="flex flex-col w-[356px]">
        <div className="relative w-full">
          <LogoIcon />
        </div>
        <h2 className="mt-[48px]">–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</h2>

        <form className="mt-[40px] w-full" onSubmit={handleSubmit}>
          <InputField
            label="–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞"
            placeholder="example@provider.com"
            value={email}
            onChange={setEmail}
            onBlur={setEmailTouched}
            isError={!!emailError && emailTouched}
          />

          {/* {!!emailError && (
            <p className="text-[#FF514F] text-[12px] font-medium mt-[8px]">
              –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–æ–π –ø–æ—á—Ç–æ–π —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            </p>
          )} */}

          <InputField
            className="mt-[16px]"
            label="–ü–∞—Ä–æ–ª—å"
            placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
            value={password}
            onChange={setPassword}
            type="password"
          />

          <InputField
            className="mt-[16px]"
            label="–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
            placeholder="–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
            value={confirmPassword}
            onChange={setConfirmPassword}
            onBlur={setConfirmPasswordTouched} // üëà
            type="password"
            isError={!!confirmPasswordError && confirmPasswordTouched}
          />

          <p className="mt-[24px] text-[12px] text-[#C8C8C8] font-[400]">
            –ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å:
          </p>
          {passwordRules.map((rule, index) => (
            <p
              key={index}
              className={`text-[12px] font-[400] ${
                passwordStatus[index] ? "text-green-500" : "text-[#C8C8C8]"
              }`}
            >
              {rule}
            </p>
          ))}

          <Button
            type="submit"
            variant="primary"
            disabled={
              !!emailError ||
              !!confirmPasswordError ||
              !passwordStatus.every(Boolean) ||
              !email ||
              !password ||
              !confirmPassword ||
              isLoading
            }
            className="mt-[24px]"
            label={isLoading ? "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è..." : "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è"}
          />
        </form>

        <p className="mt-[135px] max-w-[356px] text-[12px] leading-[18px] tracking-[-0.2px] text-[#BEBEC0] font-normal">
          –ü—Ä–æ–¥–æ–ª–∂–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∏¬†–≤—Ö–æ–¥, –≤—ã¬†—Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å¬†–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º
          —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ–º,¬†–ü–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏,¬†–ü–æ–ª–∏—Ç–∏–∫–æ–π
          –≤–æ–∑–≤—Ä–∞—Ç–æ–≤¬†–∏¬†–¥–∞—ë—Ç–µ¬†–°–æ–≥–ª–∞—Å–∏–µ –Ω–∞¬†–æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        </p>
      </div>

      <div className="ml-auto relative h-[784px]">
        <Image
          src="/assets/registration_mask.webp"
          alt="Login Illustration"
          className="w-[809px] h-full"
          width={809}
          height={784}
        />
        <Link href="#" className="absolute right-4 bottom-[14px]">
          <Image
            src="/assets/logos_telegram.webp"
            alt="Telegram"
            className="ml-auto"
            width={55}
            height={55}
          />
        </Link>
        <Link href="#" className="absolute right-24 bottom-[14px]">
          <Image
            src="/assets/logos_vk.webp"
            alt="VK"
            className="ml-auto"
            width={55}
            height={55}
          />
        </Link>
      </div>
    </section>
  );
};
