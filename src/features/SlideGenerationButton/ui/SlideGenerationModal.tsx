"use client";

import React, { useState, useEffect } from "react";
import { X } from "lucide-react";

interface SlideGenerationModalProps {
  isOpen: boolean;
  onClose: () => void;
  onGenerate: (prompt: string) => void;
  isLoading?: boolean;
}

export const SlideGenerationModal: React.FC<SlideGenerationModalProps> = ({
  isOpen,
  onClose,
  onGenerate,
  isLoading = false,
}) => {
  const [prompt, setPrompt] = useState("");

  useEffect(() => {
    if (!isOpen) return;

    const handler = (e: KeyboardEvent) => {
      if (e.key === "Escape") {
        onClose();
      }
    };

    document.addEventListener("keydown", handler);
    return () => document.removeEventListener("keydown", handler);
  }, [isOpen, onClose]);

  const handleSubmit = () => {
    if (prompt.trim() && !isLoading) {
      onGenerate(prompt);
    }
  };

  const handleKeyDown = (e: React.KeyboardEvent) => {
    if (e.key === "Enter" && (e.ctrlKey || e.metaKey)) {
      handleSubmit();
    }
  };

  if (!isOpen) return null;

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-[16px] p-8 max-w-[600px] w-full mx-4 max-h-[80vh] overflow-y-auto">
        <div className="flex items-center justify-between mb-6">
          <h2 className="text-[24px] font-medium text-[#0B0911]">
            –°–æ–∑–¥–∞—Ç—å —Å–ª–∞–π–¥—ã –∏–∑ —Ç–µ–∫—Å—Ç–∞
          </h2>
          <button
            onClick={onClose}
            disabled={isLoading}
            className="text-[#8F8F92] hover:text-[#0B0911] transition-colors"
          >
            <X size={24} />
          </button>
        </div>

        <div className="space-y-4">
          <div>
            <label className="block text-[16px] font-medium text-[#0B0911] mb-2">
              –û–ø–∏—à–∏—Ç–µ, –∫–∞–∫—É—é –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å
            </label>
            <textarea
              value={prompt}
              onChange={(e) => setPrompt(e.target.value)}
              onKeyDown={handleKeyDown}
              placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –°–æ–∑–¥–∞–π –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é –æ —Ü–∏—Ñ—Ä–æ–≤–æ–º –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–µ –¥–ª—è —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤. –í–∫–ª—é—á–∏ —Å–ª–∞–π–¥—ã –æ SEO, —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö, –∫–æ–Ω—Ç–µ–Ω—Ç-–º–∞—Ä–∫–µ—Ç–∏–Ω–≥–µ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–µ. –¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è - –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª–∏."
              className="w-full h-[120px] p-4 border border-[#E9EAEE] rounded-[8px] text-[14px] resize-none focus:outline-none focus:ring-2 focus:ring-[#BBA2FE] focus:border-transparent"
              maxLength={1000}
              disabled={isLoading}
            />
            <div className="text-[12px] text-[#8F8F92] mt-1">
              {prompt.length} / 1000 —Å–∏–º–≤–æ–ª–æ–≤
            </div>
          </div>

          <div className="bg-[#F8F9FA] p-4 rounded-[8px]">
            <h3 className="text-[14px] font-medium text-[#0B0911] mb-2">
              üí° –°–æ–≤–µ—Ç—ã –¥–ª—è –ª—É—á—à–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:
            </h3>
            <ul className="text-[12px] text-[#8F8F92] space-y-1">
              <li>‚Ä¢ –£–∫–∞–∂–∏—Ç–µ —Ç–µ–º—É –∏ —Ü–µ–ª—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏</li>
              <li>‚Ä¢ –û–ø–∏—à–∏—Ç–µ —Ü–µ–ª–µ–≤—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é</li>
              <li>‚Ä¢ –ü–µ—Ä–µ—á–∏—Å–ª–∏—Ç–µ –∫–ª—é—á–µ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ä–∞—Å–∫—Ä—ã—Ç–∏—è</li>
              <li>‚Ä¢ –£–∫–∞–∂–∏—Ç–µ –∂–µ–ª–∞–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–∞–π–¥–æ–≤</li>
            </ul>
          </div>
        </div>

        <div className="flex gap-3 mt-6">
          <button
            onClick={onClose}
            disabled={isLoading}
            className="flex-1 h-[48px] bg-[#F4F4F4] hover:bg-[#E9EAEE] text-[#0B0911] rounded-[8px] font-medium transition-colors disabled:opacity-50 disabled:cursor-not-allowed"
          >
            –û—Ç–º–µ–Ω–∏—Ç—å
          </button>
          <button
            onClick={handleSubmit}
            disabled={!prompt.trim() || isLoading}
            className="flex-1 h-[48px] bg-[#BBA2FE] hover:bg-[#A78BFA] text-white rounded-[8px] font-medium transition-colors disabled:opacity-50 disabled:cursor-not-allowed"
          >
            {isLoading ? "–°–æ–∑–¥–∞–Ω–∏–µ..." : "–°–æ–∑–¥–∞—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é"}
          </button>
        </div>

        <div className="text-[12px] text-[#8F8F92] mt-4 text-center">
          –ù–∞–∂–º–∏—Ç–µ Ctrl+Enter –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è
        </div>
      </div>
    </div>
  );
};
